{"version":3,"file":"static/js/186.1ed3710a.chunk.js","mappings":"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","sources":["../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","components/API.jsx","components/Reviews/Reviews.jsx"],"sourcesContent":["function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(undefined);\n    });\n  };\n}","export async function getPopularMovies(setData) {\n  try {\n    const URL =\n      'https://api.themoviedb.org/3/movie/popular?api_key=6bfc661313cc74df3ae441abc4c4707b';\n\n    const qwe = await fetch(URL).then(res => res.json());\n    setData(qwe);\n  } catch (error) {\n    console.log(error);\n  }\n}\nexport async function getMoviesBySearchQuery(searchQuery, setFunc) {\n  if (searchQuery === '') {\n    return;\n  }\n  try {\n    const URL = `https://api.themoviedb.org/3/search/movie?api_key=6bfc661313cc74df3ae441abc4c4707b&language=en-US&query=${searchQuery\n      .trim()\n      .toLowerCase()}&page=1&include_adult=false`;\n\n    const qwe = await fetch(URL).then(res => res.json());\n    if (qwe.total_pages === 0) {\n      setFunc(null);\n      return;\n    }\n    setFunc(qwe);\n  } catch (error) {\n    console.log(error);\n  }\n}\nexport async function getMoviesById(id, setData) {\n  if (id === null) {\n    return;\n  }\n  try {\n    const URL = `\nhttps://api.themoviedb.org/3/movie/${id}?api_key=6bfc661313cc74df3ae441abc4c4707b&language=en-US`;\n\n    const qwe = await fetch(URL).then(res => res.json());\n\n    setData(qwe);\n  } catch (error) {\n    console.log(error);\n  }\n}\nexport async function getActorsByMovieId(id, setData) {\n  if (id === null) {\n    return;\n  }\n  try {\n    const URL = `\nhttps://api.themoviedb.org/3/movie/${id}/credits?api_key=6bfc661313cc74df3ae441abc4c4707b&language=en-US`;\n\n    const qwe = await fetch(URL).then(res => res.json());\n\n    if (qwe.total_pages === 0) {\n      setData(null);\n      return;\n    }\n    setData(qwe);\n  } catch (error) {\n    console.log(error);\n  }\n}\nexport async function getReviewsByMovieId(id, setData) {\n  if (id === null) {\n    return;\n  }\n  try {\n    const URL = `\nhttps://api.themoviedb.org/3/movie/${id}/reviews?api_key=6bfc661313cc74df3ae441abc4c4707b&language=en-US`;\n\n    const qwe = await fetch(URL).then(res => res.json());\n    console.log(qwe);\n    if (qwe.total_pages === 0) {\n      setData(null);\n      return;\n    }\n    setData(qwe);\n  } catch (error) {\n    console.log(error);\n  }\n}\n","import { getReviewsByMovieId } from 'components/API';\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nfunction Reviews() {\n  const [data, setData] = useState(null);\n  const { id } = useParams();\n  useEffect(() => {\n    getReviewsByMovieId(id, setData); // eslint-disable-next-line\n  }, []);\n  return (\n    <div>\n      <ul>\n        {data !== null ? (\n          data.results.map(({ author, content, id }) => (\n            <li key={id}>\n              <div>\n                <h2>{author}</h2>\n                <p>{content}</p>\n              </div>\n            </li>\n          ))\n        ) : (\n          <p>Sorry there is any review</p>\n        )}\n      </ul>\n    </div>\n  );\n}\nexport default Reviews;\n"],"names":["asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined","getPopularMovies","setData","fetch","res","json","qwe","console","log","getMoviesBySearchQuery","searchQuery","setFunc","URL","trim","toLowerCase","total_pages","getMoviesById","id","getActorsByMovieId","getReviewsByMovieId","useState","data","useParams","useEffect","results","map","author","content"],"sourceRoot":""}